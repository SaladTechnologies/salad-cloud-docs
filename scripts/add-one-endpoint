#! /usr/bin/bash

file=$1

if [ -z "$file" ]; then
    echo "Usage: $0 <endpoint-schema-config-file>"
    exit 1
fi

# Create the API spec for the endpoint
node scripts/create-api-spec-for-endpoint.js $file

apiSpecName=$(jq -r '.endpointId' $file)
apiSpecPath="api-specs/$apiSpecName.json"
apiDocPath=$(jq -r '.apiDocPath' $file)

# This mintlify utility creates mdx pages from the open api spec, and outputs a suggested addition to mint.json
menu=$(npx --yes @mintlify/scraping@latest openapi-file $apiSpecPath -o $apiDocPath | sed -n '/navigation object suggestion:/,$ p' | sed '1d')
pages=$(echo "$menu" | jq '.[0].pages | map(sub("inference_endpoints/"; ""))')

# The path auto-generated by the above utility needs to be modified for our purposes
mv $apiDocPath/inference_endpoints/* $apiDocPath/
rm -r $apiDocPath/inference_endpoints

# For each .mdx in the doc path, add the spec name to the frontmatter
for page in $apiDocPath/*.mdx; do
    sed -i "s/^openapi: \(.*\)$/openapi: $apiSpecName \1/" "$page"
done

# Fix the formatting of the newly created mdx files
npx --yes prettier --write $apiDocPath

echo "============================"
echo "Pages for $apiDocPath:"
echo "$pages" | jq .
echo "============================"
